pipeline {
  agent any

  environment {
    IMAGE_NAME = 'walidazhari/user-service'
    SHORT_COMMIT = "${env.GIT_COMMIT?.take(7) ?: 'unknown'}"
    IMAGE_TAG = "${env.BUILD_NUMBER}-${SHORT_COMMIT}"
  }

  stages {
    stage('Clean Workspace') {
      steps {
        cleanWs()
      }
    }

    stage('Checkout') {
      steps {
        git url: 'https://github.com/WALIDAZHARI/devsecops-tp.git', branch: 'main'
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}", "-f user-service/Dockerfile user-service")
        }
      }
    }

    stage('Trivy Security Scan') {
      steps {
        sh '''
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:0.50.1 image ${IMAGE_NAME}:${IMAGE_TAG}
        '''
      }
    }

    stage('Login to Docker Hub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
        }
      }
    }

    stage('Push to Docker Hub') {
      steps {
        script {
          dockerImage.push("${IMAGE_TAG}")
          dockerImage.push("latest")
        }
      }
    }
  }
}